#!/usr/bin/env python3
"""
Convert hdf5 file generated by
D4RL/scripts/generation/generate_maze2d_funnel_datasets.py to ReplayBuffer format
"""

import os
from pathlib import Path

import d4rl  # Critical: Without this, the custom environment will not be loaded
import gym
import numpy as np

from diffusha.data_collection.config.default_args import DCArgs
from diffusha.data_collection.generate_data import ReplayBuffer

min_traj_len = 5


def main(env_name: str, h5path: str, suffix: str = ""):
    basename = Path(h5path).stem
    env = gym.make(env_name, terminate_at_goal=True)
    replay_buffer = ReplayBuffer(
        Path(DCArgs.pointmaze_data_dir) / (basename + suffix), state_dim=4, action_dim=2
    )

    print(f"reading from {h5path}")
    assert os.path.isfile(h5path)
    dataset = env.get_dataset(h5path=h5path)

    terminal_steps = np.where(dataset["terminals"])[0]
    print(f"There are {len(terminal_steps)} episodes in the dataset!")
    prev_term_step = 0
    for term_step in terminal_steps:
        term_step = term_step + 1  # Why??
        if term_step - prev_term_step < min_traj_len:
            print(
                f"A short trajectory with len "
                f"{term_step - prev_term_step} < {min_traj_len} is rejected."
            )
            prev_term_step = term_step
            continue

        for idx in range(prev_term_step, term_step):
            state = dataset["observations"][idx]
            act = dataset["actions"][idx]
            replay_buffer.store(state, act)

        prev_term_step = term_step


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--env_name", type=str, default="maze2d-funnel-v0", help="Maze type"
    )
    parser.add_argument(
        "--h5path",
        type=str,
        default="/d4rl/maze2d/maze2d-funnel-v0.hdf5",
        help="Path to h5py file",
    )
    parser.add_argument("--suffix", default="")
    args = parser.parse_args()

    main(args.env_name, args.h5path, suffix=args.suffix)
